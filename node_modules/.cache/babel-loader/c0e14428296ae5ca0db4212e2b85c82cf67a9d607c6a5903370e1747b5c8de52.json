{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\workspace\\\\frontend\\\\src\\\\components\\\\board\\\\Boardlist.jsx\",\n  _s = $RefreshSig$();\n// List.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from '../../css/Boardlist.module.css'; // CSS 모듈 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardList = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/spring/board/list').then(response => setBoards(response.data)).catch(error => console.error('데이터를 불러오는 중 오류가 발생했습니다:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uB9AC\\uC2A4\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.postTitle,\n          children: board.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.postContent,\n          children: board.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 23\n        }, this)]\n      }, board.seq_board, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n_s(BoardList, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useState","useEffect","axios","styles","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","get","then","response","data","catch","error","console","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","list","map","board","listItem","postTitle","subject","postContent","content","seq_board","_c","$RefreshReg$"],"sources":["D:/React/workspace/frontend/src/components/board/Boardlist.jsx"],"sourcesContent":["// List.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from '../../css/Boardlist.module.css'; // CSS 모듈 가져오기\r\n\r\nconst BoardList = () => {\r\n  const [boards, setBoards] = useState([]); \r\n\r\n  useEffect(() => {\r\n      axios.get('http://localhost:8080/spring/board/list') \r\n          .then(response => setBoards(response.data)) \r\n          .catch(error => console.error('데이터를 불러오는 중 오류가 발생했습니다:', error));\r\n  }, []);\r\n\r\n  return (\r\n      <div className={styles.container}>\r\n          <h2 className={styles.title}>게시판 리스트</h2>\r\n          <ul className={styles.list}>\r\n              {boards.map(board => (\r\n                  <li key={board.seq_board} className={styles.listItem}>\r\n                      <h3 className={styles.postTitle}>{board.subject}</h3>\r\n                      <p className={styles.postContent}>{board.content}</p>\r\n                  </li>\r\n              ))}\r\n          </ul>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACQ,GAAG,CAAC,yCAAyC,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAIH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACe,SAAU;IAAAC,QAAA,gBAC7Bd,OAAA;MAAIY,SAAS,EAAEd,MAAM,CAACiB,KAAM;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCnB,OAAA;MAAIY,SAAS,EAAEd,MAAM,CAACsB,IAAK;MAAAN,QAAA,EACtBX,MAAM,CAACkB,GAAG,CAACC,KAAK,iBACbtB,OAAA;QAA0BY,SAAS,EAAEd,MAAM,CAACyB,QAAS;QAAAT,QAAA,gBACjDd,OAAA;UAAIY,SAAS,EAAEd,MAAM,CAAC0B,SAAU;UAAAV,QAAA,EAAEQ,KAAK,CAACG;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrDnB,OAAA;UAAGY,SAAS,EAAEd,MAAM,CAAC4B,WAAY;UAAAZ,QAAA,EAAEQ,KAAK,CAACK;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhDG,KAAK,CAACM,SAAS;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGpB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAACjB,EAAA,CAtBID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}