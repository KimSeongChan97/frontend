{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\workspace\\\\frontend\\\\src\\\\components\\\\board\\\\BoardList.jsx\",\n  _s = $RefreshSig$();\n// src/components/board/BoardList.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from '../../css/Boardlist.module.css'; // CSS 모듈 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardList = () => {\n  _s();\n  useEffect(() => {\n    // API 호출하여 게시글 목록 불러오기\n    axios.get('http://localhost:8080/spring/board/list').then(response => {\n      setBoards(response.data); // 성공 시 게시글 목록 저장\n      setLoading(false); // 로딩 상태 종료\n    }).catch(error => {\n      console.error('데이터를 불러오는 중 오류가 발생했습니다:', error);\n      setError('데이터를 불러오는 중 오류가 발생했습니다.');\n      setLoading(false); // 로딩 상태 종료\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this); // 로딩 중 메시지 표시\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this); // 에러 메시지 표시\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uB9AC\\uC2A4\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), boards.length > 0 ?\n    /*#__PURE__*/\n    // 게시글이 있는 경우 목록 출력\n    _jsxDEV(\"ul\", {\n      className: styles.list,\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.postTitle,\n          children: board.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.postContent,\n          children: board.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.postInfo,\n          children: [\"\\uC791\\uC131\\uC790: \", board.name, \" | \\uC870\\uD68C\\uC218: \", board.hit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, board.seq, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.emptyMessage,\n      children: \"\\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) // 게시물이 없는 경우 메시지 표시\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useState","useEffect","axios","styles","jsxDEV","_jsxDEV","BoardList","_s","get","then","response","setBoards","data","setLoading","catch","error","console","setError","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","title","boards","length","list","map","board","listItem","postTitle","subject","postContent","content","postInfo","name","hit","seq","emptyMessage","_c","$RefreshReg$"],"sources":["D:/React/workspace/frontend/src/components/board/BoardList.jsx"],"sourcesContent":["// src/components/board/BoardList.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from '../../css/Boardlist.module.css'; // CSS 모듈 가져오기\r\n\r\nconst BoardList = () => {\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // API 호출하여 게시글 목록 불러오기\r\n    axios\r\n      .get('http://localhost:8080/spring/board/list')\r\n      .then(response => {\r\n        setBoards(response.data); // 성공 시 게시글 목록 저장\r\n        setLoading(false); // 로딩 상태 종료\r\n      })\r\n      .catch(error => {\r\n        console.error('데이터를 불러오는 중 오류가 발생했습니다:', error);\r\n        setError('데이터를 불러오는 중 오류가 발생했습니다.');\r\n        setLoading(false); // 로딩 상태 종료\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩 중...</div>; // 로딩 중 메시지 표시\r\n  if (error) return <div>{error}</div>; // 에러 메시지 표시\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>게시판 리스트</h2>\r\n      {boards.length > 0 ? ( // 게시글이 있는 경우 목록 출력\r\n        <ul className={styles.list}>\r\n          {boards.map(board => (\r\n            <li key={board.seq} className={styles.listItem}>\r\n              <h3 className={styles.postTitle}>{board.subject}</h3>\r\n              <p className={styles.postContent}>{board.content}</p>\r\n              <p className={styles.postInfo}>\r\n                작성자: {board.name} | 조회수: {board.hit}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className={styles.emptyMessage}>게시물이 없습니다.</p> // 게시물이 없는 경우 메시지 표시\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}