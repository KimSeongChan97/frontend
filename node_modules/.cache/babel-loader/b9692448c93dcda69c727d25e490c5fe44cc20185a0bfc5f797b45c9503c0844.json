{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\workspace\\\\frontend\\\\src\\\\Time.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Time = () => {\n  _s();\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n\n  // 컴포넌트가 처음 렌더링 될 때 실행되는 useEffect \n  useEffect(() => {\n    // 1초마다 시간을 업데이트하는 타이머를 설정\n    const timer = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    // 컴포넌트가 언마운트 될 때 타이머를 정리해 줌\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      fontFamily: 'Orbitron'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '2em'\n        },\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Time, \"jv+edrtG9vNyfyGh4+I7dCkFwt0=\");\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Time","_s","time","setTime","Date","toLocaleTimeString","timer","setInterval","clearInterval","style","textAlign","fontFamily","children","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/workspace/frontend/src/Time.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Time = () => {\r\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n\r\n  // 컴포넌트가 처음 렌더링 될 때 실행되는 useEffect \r\n  useEffect(() => {\r\n    // 1초마다 시간을 업데이트하는 타이머를 설정\r\n    const timer = setInterval(() => {\r\n      setTime(new Date().toLocaleTimeString());\r\n    }, 1000);\r\n    // 컴포넌트가 언마운트 될 때 타이머를 정리해 줌\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', fontFamily: 'Orbitron'}}>\r\n      <div>\r\n        <h1 style={{ fontWeight: 'bold', fontSize: '2em' }}>\r\n          {time}\r\n          </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAIO,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;;EAEjE;EACAT,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BJ,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC1C,CAAC,EAAE,IAAI,CAAC;IACR;IACA,OAAO,MAAMG,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKU,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAU,CAAE;IAAAC,QAAA,eACzDb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAIU,KAAK,EAAE;UAAEI,UAAU,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAM,CAAE;QAAAF,QAAA,EAChDV;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtBID,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}